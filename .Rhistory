library('mice') # imputation
library('randomForest') # classification algorithm
list.files()
test <- read.csv('test.csv')
train <- read.csv('train.csv')
str(train)
train2 <- read.csv('train.csv', stringsAsFactors = FALSE)
str(train2)
drop('train2')
drop(train2)
remove(train2)
full <- bind_rows(train, test)
warning()
full <- bind_rows(train, test, warning())
str(full)
head(full$name)
ll
head(full$Name)
head(full$Name, 10)
?gsub
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
str(full)
head(full$Title)
head(full$Title,10)
table(full$Sex, full$Title)
'Major', 'Rev', 'Sir', 'the Countess' )
rare_title <- c('Capt', 'Col', 'Don', 'Dona', 'Dr', 'Jonkheer', 'Lady',
'Major', 'Rev', 'Sir', 'the Countess' )
full$Title[full$Title == 'Mlle'] <- 'Miss'
full$Title[full$Title == 'MMe' ] <- 'Miss'
full$Title[full$Title == 'Ms' ] <- 'Mrs'
full$Title[full$Title %in% rare_title] <- 'Rare Title'
table(full$Sex, full$Title)
full$Title[full$Title == 'Mme' ] <- 'Miss'
table(full$Sex, full$Title)
full$Surname <- sapply(full$Name, function(x) strsplit(x, split = '[,.]')[[1]][1])
```
full$Surname <- sapply(full$Name,
function(x) strsplit(x, split = '[,.]')[[1]][1])
head(full$Surname,10)
?cat
cat(paste('We have' <b>,  nlevels(factor(full$Surname)), </b> 'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have <b>',  nlevels(factor(full$Surname)), '</b> unique surnames. I would be interested to infer ethnicity based on surname...'))
```
cat(paste('We have <b>',  nlevels(factor(full$Surname)), '</b> unique surnames. I would be interested to infer ethnicity based on surname...'))
<b>?
?<b>
?b
??b
cat(paste('We have </b>',  nlevels(factor(full$Surname)), '</b> unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' **bold**,  nlevels(factor(full$Surname)), '</b> unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' **bold**  nlevels(factor(full$Surname)), '</b> unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have'   nlevels(factor(full$Surname)), '</b> unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have'   nlevels(factor(full$Surname)), '</b> unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have',  nlevels(factor(full$Surname)), '</b> unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have',  nlevels(factor(full$Surname)),  unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have',  nlevels(factor(full$Surname)),  'unique surnames. I would be interested to infer ethnicity based on surname...'))
```
cat(paste('We have',  nlevels(factor(full$Surname)),  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have',  <b> nlevels(factor(full$Surname)),  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have'  <b>, nlevels(factor(full$Surname)),  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have  <b>,' nlevels(factor(full$Surname)),  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have  <b>', nlevels(factor(full$Surname)),  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b>, nlevels(factor(full$Surname)),  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b>, nlevels(factor(full$Surname)),  <b>'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have </b>', nlevels(factor(full$Surname)),  '</b>unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have, </b>', nlevels(factor(full$Surname)),  '</b>unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have', </b>, nlevels(factor(full$Surname)),  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have', </b> nlevels(factor(full$Surname)),  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have', </b> nlevels(factor(full$Surname)), </b>  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have', <b> nlevels(factor(full$Surname)), </b>  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have', <b>, nlevels(factor(full$Surname)), </b>  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b>, nlevels(factor(full$Surname)), </b>  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b, nlevels(factor(full$Surname)), </b>  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b, nlevels(factor(full$Surname)), /b>  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b, nlevels(factor(full$Surname)), b>  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b, nlevels(factor(full$Surname)), b/>  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b, nlevels(factor(full$Surname)), b/  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b, nlevels(factor(full$Surname)), b>,  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b, nlevels(factor(full$Surname)) b>,  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b, nlevels(factor(full$Surname)), b>  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' </b, nlevels(factor(full$Surname)), b/>  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b, nlevels(factor(full$Surname)), b/>  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b, nlevels(factor(full$Surname)), b/  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b, nlevels(factor(full$Surname)), /  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <b, nlevels(factor(full$Surname)),  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' <, nlevels(factor(full$Surname)),  'unique surnames. I would be interested to infer ethnicity based on surname...'))
cat(paste('We have' , nlevels(factor(full$Surname)),  'unique surnames. I would be interested to infer ethnicity based on surname...'))
paste(<B>Trend Date Range</B>)
paste('<B>Trend Date Range</B>')
paste('<b> Trend Date Range </b>')
library('shiny')
paste('<b> Trend Date Range </b>')
full$Fsize <- full$SibSp + full$Parch + 1
full$family <- paste( full$Surname, full$Fsize, sep = '_')
head(full$family)
unique(full$family)
full$Surname = 'Emir'
full$Surname == 'Emir'
full$Surname <- sapply(full$Name,
function(x) strsplit(x, split = '[,.]')[[1]][1])
print(full$Name[full$Surname=='Emir'])
theme_few
ggplot(data = full, aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size') +
theme_few
ggplot(data = full, aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size')
ggplot(data = full, aes(x != is.NA(Fsize), fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size')
ggplot(data = full, aes(x = subset(!is.NA(Fsize)), fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size')
ggplot(data = full, aes(x = subset(!is.na(Fsize)), fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size')
ggplot(data = full, aes(x = subset(full, !is.na(Fsize)), fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size')
```
ggplot(data = full, aes(x = subset(full, !is.na(Fsize)), fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size')
ggplot(data = full, aes(x = subset(full, !is.na(Fsize)),
fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size')
labs(xlab='Family Size')
ggplot(data = full, aes(x = subset(full, !is.na(Fsize)),
fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size')
ggplot(data = full, aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size')
ggplot(data = subset(full, !is.na(Fsize)), aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size')
print(full$Fsize[full$Fsize == "NA"])
print(full$Fsize[full$Survived == "NA"])
print(full$Survived[full$Survived == "NA"])
ggplot(data = subset(full, !is.na(Survived)), aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size')
ggplot(data = subset(full, !is.na(Survived)), aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat = 'count', position = 'dodge') +
scale_x_continuous(breaks = c(1:11)) +
labs(xlab='Family Size') +
theme_few()
full$FsizeD <- full$Fsize[full$Fsize == 1] <- 'Small'
full$FsizeD
full$FsizeD[full$Fsize == 1] <- 'Small'
full$FsizeD
remove(full$FsizeD)
drop(full$FsizeD)
getwd()
setwd
setwd('/Users/engin/Mercury Retrograde')
setwd('/Users/engin')
list.files()
setwd('/Users/engin/Mercury Regrograde')
list.files()
read.csv('NHTSA_MercuryRx_Data.xlsx')
readxl::read_xlsx('NHTSA_MercuryRx_Data.xlsx')
mercury <- readxl::read_xlsx('NHTSA_MercuryRx_Data.xlsx')
colnames(mercury[4]) <- 'sign'
colnames(mercury[5]) <- 'speed'
colnames(mercury)[4] <- 'sign'
colnames(mercury)[5] <- 'speed'
mercury$sign <- factor(mercury$sign)
mercury$speed <- factor((mercury$speed))```
mercury$speed <- factor((mercury$speed))
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
library('randomForest') # classification algorithm
plot(mercury$Fatalities)
range(mercury$Fatalities)
qplot(data = mercury, x = Fatalities)
qplot(data = mercury, x = Fatalities, binwidth = 1)
```
color = I('Black'), fill = I('#5760AB'))
qplot(data = mercury, x = Fatalities, binwidth = 1,
xlab = 'Fatalities',
ylab = 'Count',
color = I('Black'), fill = I('#5760AB'))
table(mercury$Fatalities)
range(mercury$Vehicles)
table(mercury$Vehicles)
qplot(data = mercury, x = Vehicles, binwith = 1)
qplot(data = mercury, x = Vehicles, binwidth = 1)
xlim = c(0,20))
qplot(data = mercury, x = Vehicles, binwidth = 1,
xlim = c(0,20))
xlim = c(0,5))
qplot(data = mercury, x = Vehicles, binwidth = 1,
xlim = c(0,5))
table(mercury$sign)
qplot(data = mercury, x = sign)
qplot(data = mercury, x = sign,
color = I('Black'), fill = I('#5760AB'))
qplot(data = subset(mercury, !is.na(sign)), x = sign,
color = I('Black'), fill = I('#5760AB'))
table(mercury$speed)
qplot(data = mercury, x = speed)
qplot(data = subset(mercury, !is.na(speed)), x = speed)
library('dplyr') # data manipulation
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
vehicle_mean = mean(Vehicles)),
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
vehicle_mean = mean(Vehicles)),
n = n()) %>%
arrange(speed)
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
vehicle_mean = mean(Vehicles),
n = n()) %>%
arrange(speed)
View(mercury.speed)
View(mercury.speed)
print(mercury.speed)
View(mercury.speed)
mercury$speed <- factor(mercury$speed, levels = c('xFD', 'FD', 'SD', 'xSDr', 'xSRr', 'SR', 'FR', 'xSRd', 'xSDd'))
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
vehicle_mean = mean(Vehicles),
n = n()) %>%
arrange(speed)
print(mercury.speed)
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
vehicle_mean = mean(Vehicles),
crash = n()) %>%
arrange(speed)
print(mercury.speed)
View(mercury.speed)
table(mercury$Date, mercury$speed)
View(mercury)
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
vehicle_mean = mean(Vehicles),
days = n(speed>0)
crash = n())
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
vehicle_mean = mean(Vehicles),
days = n(speed>0),
crash = n())
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
vehicle_mean = mean(Vehicles),
days = length(speed>0),
crash = n())
mercury.date <- mercury %>%
group_by(Date) %>%
summarise(mean_speed = mean(speed),
n = n())
View(mercury.date)
warning()
warnings(mercury.date <- mercury %>%
group_by(Date) %>%
summarise(mean_speed = mean(speed),
n = n()))
View(mercury.speed)
mercury.date <- mercury %>%
group_by(Date, speed) %>%
summarise(n = n())
View(mercury.speed)
View(mercury.speed)
View(mercury.date)
View(mercury.date)
mercury.date <- mercury %>%
group_by(Date, speed) %>%
summarise(mean_n = mean(n()),
n = n())
View(mercury.date)
View(mercury.date)
mercury.date <- mercury %>%
group_by(speed, Date) %>%
summarise(n = n()) %>%
summarise(mean_n = mean(n))
View(mercury.date)
View(mercury.date)
View(mercury.date)
View(mercury.speed)
mercury.speed <- mercury %>%
group_by(speed, Date) %>%
summarise(n = n()) %>%
summarise(fatalities_mean = mean(Fatalities),
vehicle_mean = mean(Vehicles),
days = length(speed>0),
total_crash = n(),
mean_crash = mean(total_crash))
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
vehicle_mean = mean(Vehicles),
days = length(speed>0),
crash = n())
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
vehicle_mean = mean(Vehicles),
crash = n())
mercury.date <- mercury %>%
group_by(speed, Date) %>%
summarise(n = n()) %>%
summarise(mean_crash = mean(n))
View(mercury.date)
View(mercury.date)
View(mercury.speed)
mercury.mean <- bind_cols(mercury.speed, mercury.dat)
mercury.mean <- bind_cols(mercury.speed, mercury.date)
View(mercury.mean)
View(mercury.mean)
? bind_cols
mercury.mean <- mercury.mean[!speed1]
mercury.mean <- mercury.mean[!'speed1']
mercury.mean <- mercury.mean[!5]
View(mercury.speed)
View(mercury.mean)
mercury.mean <- bind_cols(mercury.speed, mercury.date)
mercury.mean <- mercury.mean[,!5]
mercury.mean <- bind_cols(mercury.speed, mercury.date)
mercury.mean <- mercury.mean[!speed1]
mercury.mean <- mercury.mean[!c(speed1)]
mercury.mean <- mercury.mean[!c(speed1 )]
mercury.mean <- mercury.mean[!c('speed1')]
mercury.mean <- mercury.mean[c(-5)]
View(mercury.mean)
View(mercury.mean)
View(mercury)
mercury.mean <- bind_cols(mercury.speed, mercury.date)
mercury.mean <- mercury.mean[c(-5,-4 )]
View(mercury.mean)
View(mercury.date)
View(mercury.date)
mercury.grand_mean <- mercury %>%
summarise(fatalities_grand_mean = mean(Fatalities),
vehicles_grand_mean = mean(Vehicles))
View(mercury.grand_mean)
mercury.grand_mean <- mercury.mean %>%
summarize(fatalities_grand_mean = mean(fatalities_mean),
vehicle_grand_mean = mean(vehicle_mean),
crash_grand_mean = mean(mean_crash))
View(mercury.grand_mean)
mercury.grand_mean <- mercury.mean %>%
summarize(fatalities_grand_mean = mean(fatalities_mean),
vehicle_grand_mean = mean(vehicle_mean),
crash_grand_mean = mean(mean_crash),
n = n())
View(mercury.grand_mean)
View(mercury.grand_mean)
View(mercury.mean)
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
fatalities_n = count(Fatalities)
vehicle_mean = mean(Vehicles),
crash = n())
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
fatalities_n = count(Fatalities),
vehicle_mean = mean(Vehicles),
crash = n())
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
fatalities_n = count(Fatalities),
vehicle_mean = mean(Vehicles),
crash = n())
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
vehicle_mean = mean(Vehicles),
crash = n())
print(mercury.speed)
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
fatalities_n = length(Fatalities),
vehicle_mean = mean(Vehicles),
crash = n())
View(mercury.speed)
mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
fatalities_n = length(Fatalities),
vehicle_mean = mean(Vehicles),
vehicle_n = length(Vehicles),
crash = n())
print(mercury.speed)
qplot(data = mercury.mean, x = fatalities.mean)
qplot(data = mercury.mean, x = fatalities_mean)
qplot(data = mercury.mean, y = fatalities_mean, x = speed)
View(mercury)
table_1 <- mercury[speed == 'XFD', Fatalities]
table_1 <- mercury[speed == 'XFD', "Fatalities"]
table_1 <- mercury[ speed == 'XFD', "Fatalities"]
table_1 <- table(mercury$speed == 'xFD', mercury$Fatalities)
table_1
table_1 <- mercury[, c('xFD')]
table_1 <- mercury[c('speed'=='xFD), c('Fatalities')]
table_1 <- mercury[c('speed'=='xFD'), c('Fatalities')]
table_1 <- mercury[c('speed'==xFD), c('Fatalities')]
table_1 <- mercury[c('speed')=='xFD', c('Fatalities')]
table_1 <- mercury[, c('Fatalities')]
table_1 <- mercury[, c('Fatalities')]
View(table_1)
xFD_F <- mercury[, c('Fatalities')]
xFD_F <- mercury[, c('Fatalities', 'speed')]
View(xFD_F)
xFD_F <- mercury[which(mercury$speed == 'xFD', Fatalities)
xFD_F <- mercury[which(mercury$speed == 'xFD', Fatalities))
xFD_F <- mercury[which(mercury$speed == 'xFD', Fatalities))
xFD_F <- mercury[which(mercury$speed == 'xFD', Fatalities)]
xFD_F <- mercury[which(mercury$speed == 'xFD'), c('Fatalities')]
View(xFD_F)
mercury$speed
xFD_F <- mercury[which(mercury$speed == 'xFD'), c('Fatalities')]
FD_F <- mercury[which(mercury$speed == 'FD'), c('Fatalities')]
SD_F <- mercury[which(mercury$speed == 'SD'), c('Fatalities')]
xSDr_F <- mercury[which(mercury$speed == 'xSDr'), c('Fatalities')]
xSRr_F <- mercury[which(mercury$speed == 'xSRr'), c('Fatalities')]
SR_F <- mercury[which(mercury$speed == 'SR'), c('Fatalities')]
FR_F <- mercury[which(mercury$speed == 'FR'), c('Fatalities')]
xSRd_F <- mercury[which(mercury$speed == 'xSRd'), c('Fatalities')]
xSDd_F <- mercury[which(mercury$speed == 'xSDd'), c('Fatalities')]
```
xFD_V <- mercury[which(mercury$speed == 'xFD'), c('Vehicles')]
FD_V <- mercury[which(mercury$speed == 'FD'), c('Vehicles')]
SD_V <- mercury[which(mercury$speed == 'SD'), c('Vehicles')]
xSDr_V <- mercury[which(mercury$speed == 'xSDr'), c('Vehicles')]
xSRr_V <- mercury[which(mercury$speed == 'xSRr'), c('Vehicles')]
SR_V <- mercury[which(mercury$speed == 'SR'), c('Vehicles')]
FR_V <- mercury[which(mercury$speed == 'FR'), c('Vehicles')]
xSRd_V <- mercury[which(mercury$speed == 'xSRd'), c('Vehicles')]
xSDd_V <- mercury[which(mercury$speed == 'xSDd'), c('Vehicles')]
View(mercury.mean)
View(mercury.speed)
View(mercury.grand_mean)
View(mercury.date)
View(table_1)
remove(table_1)
group_by(speed, Date)
trial <- mercury %>%
group_by(speed, Date)
View(trial)
trial <- mercury %>%
group_by(speed, Date) %>%
summarise(n = n())
View(trial)
xFD_C <- trial[which(trial$speed == 'xFD'), c('n')]
FD_C <- trial[which(trial$speed == 'FD'), c('n')]
SD_C <- trial[which(trial$speed == 'SD'), c('n')]
xSDr_C <- trial[which(trial$speed == 'xSDr'), c('n')]
xSRr_C <- trial[which(trial$speed == 'xSRr'), c('n')]
SR_C <- trial[which(trial$speed == 'SR'), c('n')]
FR_C <- trial[which(trial$speed == 'FR'), c('n')]
xSRd_C <- trial[which(trial$speed == 'xSRd'), c('n')]
xSDd_C <- trial[which(trial$speed == 'xSDd'), c('n')]
(mercury.speed <- mercury %>%
group_by(speed) %>%
summarise(fatalities_mean = mean(Fatalities),
fatalities_n = length(Fatalities),
vehicle_mean = mean(Vehicles),
vehicle_n = length(Vehicles),
crash = n()))
levels(mercury$speed)
t.test(xFD_F, mercury$Fatalities)
t.test(xFD_F$Fatalities, mercury$Fatalities)
t.test(FD_F$Fatalities, mercury$Fatalities)
levels(mercury$speed)
t.test(SD_F$Fatalities, mercury$Fatalities)
t.test(xSDr_F$Fatalities, mercury$Fatalities)
levels(mercury$speed)
t.test(xSRr$Fatalities, mercury$Fatalities)
t.test(xSRr_F$Fatalities, mercury$Fatalities)
levels(mercury$speed)
t.test(SR_F$Fatalities, mercury$Fatalities)
t.test(FR_F$Fatalities, mercury$Fatalities)
levels(mercury$speed)
t.test(xSRd_F$Fatalities, mercury$Fatalities)
t.test(xSDd_F$Fatalities, mercury$Fatalities)
source('~/.active-rstudio-document', echo=TRUE)
